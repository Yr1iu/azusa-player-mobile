{
  "_comment": "src/localization/en/translation.json",
  "appDrawer": {
    "homeScreenName": "Home",
    "exploreScreenName": "Discover",
    "settingScreenName": "Settings",
    "LoginName": "User Login"
  },
  "Dialog": {
    "ok": "Done",
    "cancel": "Cancel",
    "zero": "Zero",
    "nullify": "Nullify"
  },
  "CopiedPlaylistDialog": {
    "title": "Send {{title}} to..."
  },
  "NewPlaylistDialog": {
    "title": "Create {{fromList.title}} as New Playlist...",
    "titleNew": "Create New Playlist...",
    "label": "Playlist name"
  },
  "PlaylistSettingsDialog": {
    "playlistNameLabel": "Playlist Name",
    "subscribeUrlLabel": "Subscribe URL",
    "blacklistedUrlLabel": "Banned BVIDs",
    "useBiliShazamLabel": "Use BiliShazam",
    "useBiliSyncLabel": "BiliSync as favorite",
    "useNewSongOverwriteLabel": "New songs overwrite"
  },
  "RenameSongDialog": {
    "title": "Remame {{song.name}} to...",
    "label": "Song name"
  },
  "PlaylistsDrawer": {
    "SearchListTitle": "Search",
    "SearchListTitleNA": "MISSINGNO."
  },
  "BiliSearchBar": {
    "label": "Bilibili URL"
  },
  "PlaylistSearchBar": {
    "label": "Search"
  },
  "PlaylistOperations": {
    "updating": "Now updating {{playlist.title}}'s subscriptions...",
    "updated": "Playlist {{playlist.title}} updated",
    "reloading": "Now reloading {{playlist.title}}'s BVIDs...",
    "reloaded": "Playlist {{playlist.title}} is reset",
    "cleaning": "Now cleaning broken BVIDs in {{playlist.title}}...",
    "cleaned": "Playlist {{playlist.title}} broken links are cleaned",
    "bilishazaming": "Now shazaming {{playlist.title}}...",
    "bilishazamed": "Playlist {{playlist.title}} shazamed",
    "bilisyncing": "Now syncing {{playlist.title}} to Bilibili...",
    "bilisynced": "Playlist {{playlist.title}} synced",
    "clearListTitle": "Clear {{playlist.title}}?",
    "clearListMsg": "Are you sure to clear playlist {{playlist.title}}?",
    "deleteListTitle": "Delete {{playlist.title}}?",
    "deleteListMsg": "Are you sure to delete playlist {{playlist.title}}?",
    "resetListTitle": "Reload {{playlist.title}}?",
    "resetListMsg": "Are you sure to reload all BVIDs in  playlist {{playlist.title}}?",
    "resetting": "Now reloading {{playlist.title}}'s BVIDs...",
    "reset": "Playlist {{playlist.title}} is reset",
    "playlistSettingsTitle": "Settings...",
    "playlistSendToTitle": "Send to...",
    "bilishazamTitle": "BiliShazam",
    "bilisyncTitle": "BiliSync",
    "analyticsTitle": "Analytics",
    "removeBrokenTitle": "Remove Broken",
    "reloadBVIDTitle": "Reload Bvids",
    "clearPlaylistTitle": "Clear",
    "removePlaylistTitle": "Remove",
    "all": "All",
    "sortDiagTitle": "Sort by...",
    "sortDialogTitle": "Sort {{playlist.title}} by...",
    "ascending": "Ascending?",
    "sortTitle": "title",
    "sortArtist": "artist",
    "sortAlbum": "album",
    "sortDate": "date",
    "sortPreviousOrder": "previous",
    "searchListName": "Search"
  },
  "SongOperations": {
    "songSendToTitle": "Send to...",
    "songRenameTitle": "Rename...",
    "songSearchInPlaylistTitle": "Search in Playlist",
    "BVIDSearchTitle": "Search in Bilibili",
    "songStartRadio": "Start Radio",
    "songR128gain": "R128Gain",
    "abrepeat": "ABrepeat",
    "abrepeatTitle": "{{song.parsedName}} A-B repeat",
    "songRemoveTitle": "Remove",
    "songRemoveNBanTitle": "Remove and BAN",
    "reloadSong": "Reload",
    "selectedSongs": "Selected songs"
  },
  "GeneralSettings": {
    "autoRSSUpdateName": "Daily auto RSS update",
    "autoRSSUpdateDesc": "Automatically update playlist's subscriptions daily when opened.",
    "parseSongNameName": "Parse song name",
    "parseSongNameDesc": "Show automatically parsed song names in playlist.",
    "keepSearchedSongListWhenPlayingName": "Play searched results",
    "keepSearchedSongListWhenPlayingDesc": "When searching in a playlist, play the seached results.",
    "dataSaverName": "Data Saver",
    "dataSaverDesc": "Prefers cached songs when using cellular data",
    "noCookieBiliSearchName": "Bilibili Customized Search",
    "noCookieBiliSearchDesc": "Enable credentials in bilibili search to show customized searchresults",
    "updateLoadedTrackName": "Update Track Metadata",
    "updateLoadedTrackDesc": "Always retrieve the track metadata regardless of cache status",
    "r128gainName": "R128gain OTF",
    "r128gainDesc": "Enable on-the-fly R128gain (only works when cache is enabled)",
    "prefetchTrackName": "Prefetch Tracks",
    "prefetchTrackDesc": "Prefetch the next track (only works when cache is enabled)",
    "chatGPTResolveSongNameName": "ChatGPT on Songs",
    "chatGPTResolveSongNameDesc": "TODO: Use chatGPT to resolve song names",
    "useSuggestionName": "BiliSuggestion",
    "useSuggestionDesc": "Show suggestions when searching in the search bar",
    "memoryEfficiencyName": "Memory Efficiency",
    "memoryEfficiencyDesc": "async load songlists from playlists; NEED RESTART! will cause data loss",
    "keepForegroundName": "Keep Foreground Service",
    "keepForegroundDesc": "enable to waste a LOT of battery",
    "karaokeLyricsName": "Karaoke Lyrics",
    "karaokeLyricsDesc": "Show karaoke style lyrics",
    "biliEditAPIName": "use bilibili edit API",
    "biliEditAPIDesc": "use bilibili edit API when renaming songs",
    "screenAlwaysWakeName": "Lyric screen always on",
    "screenAlwaysWakeDesc": "turn screen always on at lyric screen",
    "fastBiliSearchName": "Fast Bilibili Search",
    "fastBiliSearchDesc": "Do not search for bilibili video episodes.",
    "suggestedSkipLongVideoName": "Skip Long Recommended Video",
    "suggestedSkipLongVideoDesc": "Skip > 10 min videos when in playing suggested mode."
  },
  "DeveloperSettings": {
    "LogName": "Show logs",
    "LogDesc": "Show the current logs.",
    "LogLevelName": "Log Level",
    "LogLevelDesc": "set Log Level.",
    "FadeName": "Fade In/out",
    "FadeDesc": "Set Fade In/out interval (need restart)",
    "FadeTitle": "Set Fade In/out (ms)",
    "VersionCheckName": "Check Version",
    "VersionCheckDesc": "Check latest version released on github.",
    "noInterruptionName": "No Interruption",
    "noInterruptionDesc": "Disables Event.RemoteDuck to prevent interruption (NEED RESTART)",
    "CacheSizeName": "Max Cached Song Size",
    "CacheSizeDesc": "Disables Event.RemoteDuck to prevent interruption (NEED RESTART)",
    "CacheSizeDesc2": "Currently set to hold a max of {{val}} songs in cache (NEED RESTART).",
    "ClearCacheName": "Clear Cache",
    "ClearCacheDesc": "Clear all cached songs.",
    "ClearCacheDesc2": "Clear all cached {{val}} songs.",
    "ClearOrphanedCacheName": "Clear Orphaned Cache",
    "ClearOrphanedCacheDesc": "Clear all cached songs.",
    "ClearOrphanedCacheDesc2": "Clear all orphaned cached {{val}} songs.",
    "DebugLogName": "Player Status",
    "DebugLogDesc": "Show TP's current status",
    "LogLevel0": "DEBUG",
    "LogLevel1": "INFO",
    "LogLevel2": "WARN",
    "LogLevel3": "ERROR",
    "LogLevel4": "CRITICAL",
    "LogLevel5": "OFF"
  },
  "Settings": {
    "GeneralSettingName": "General Settings",
    "GeneralSettingDesc": "General APM settings",
    "PluginsSettingName": "Plugins",
    "PluginsSettingDesc": "Plugins may modify app behavior. Continue with discretion.",
    "AppearanceSettingName": "Appearance",
    "AppearanceSettingDesc": "Change APM appearances",
    "SkinSettingName": "Skins",
    "SkinSettingDesc": "Change APM skin",
    "BackupSettingName": "Playlist Backup",
    "BackupSettingDesc": "Backup APM playlists via Dropbox",
    "InfoSettingName": "About",
    "InfoSettingDesc": "About APM",
    "SplashSettingName": "Splashes",
    "SplashSettingDesc": "View APM's splash ads",
    "DeveloperOptionsName": "Developer Options",
    "DeveloperOptionsDesc": "Experimental Options in pre-release versions of APM; risk of losing data, dont touch, seriously",
    "LanguageOptionsName": "Change Language",
    "LanguageOptionsDesc": "Change app language",
    "LanguageOptionsTitle": "Change Language",
    "LoginName": "Bilibili Login",
    "LoginDesc": "login to bilibili",
    "FeatureNotImplemented": "Feature not implemented"
  },
  "PluginSettings": {
    "UpdatingRegExpFromGithub": "Update RegExp rules from Github...",
    "UpdatedRegExpFromGithub": "Updated RegExp rules from GitHub!",
    "UpdateFailRegExpFromGithub": "Updated RegExp rules from GitHub FAILED.",
    "UpdatingR128GainFromGithub": "Update R128Gain rules from Github...",
    "UpdatedR128GainFromGithub": "Updated R128Gain rules from GitHub!",
    "UpdateFailR128GainFromGithub": "Updated R128Gain rules from GitHub FAILED.",
    "UpdatingABRepeatFromGithub": "Update ABRepeat rules from Github...",
    "UpdatedABRepeatFromGithub": "Updated ABRepeat rules from GitHub!",
    "UpdateFailABRepeatFromGithub": "Updated ABRepeat rules from GitHub FAILED.",
    "RegExpName": "Update RegExp",
    "RegExpDesc": "Update RegExp rules from GitHub",
    "MusicFreeName": "MusicFree Plugins",
    "MusicFreeDesc": "Enable MusicFree plugins",
    "MusicFreeCheckTitle": "MusicFree Plugins",
    "R128GainName": "Update R18Gain",
    "R128GainDesc": "Update R18Gain rules from GitHub",
    "ABRepeatName": "Update ABRepeat",
    "ABRepeatDesc": "Update ABRepeat rules from GitHub"
  },
  "AppearanceSettings": {
    "noWeebSkinsName": "Weeb be Gone",
    "noWeebSkinsDesc": "Turn off weeb skins",
    "accentColorName": "Use Accent Color",
    "accentColorDesc": "Use accent color from song covers when not using weeb skins",
    "PrimaryColor": "Primary color",
    "SecondaryColor": "Secondary color",
    "ContrastColor": "Contrast color",
    "BackgroundColor": "Background color",
    "ColorSchemeName": "Select Color Scheme",
    "ColorSchemeDesc": "Current color scheme is {{ scheme }}",
    "wavyProgressBarName": "Wavy Progress Bar",
    "wavyProgressBarDesc": "Show a wavy progress bar (huge battery drain)",
    "ColorSchemeLight": "light",
    "ColorSchemeDark": "dark",
    "ColorSchemeAdaptive": "adaptive",
    "hideCoverInMobileName": "Hide album cover",
    "hideCoverInMobileDesc": "Hide the album cover.",
    "trackCoverArtCardName": "Track Cover Art",
    "trackCoverArtCardDesc": "Show a song's cover art when selected"
  },
  "Sync": {
    "Local": "Local",
    "Dropbox": "Dropbox",
    "Gitee": "Gitee",
    "Github": "Github",
    "PersonalCloud": "Personal Cloud",
    "ExportLocation": "Select Sync:",
    "DropboxUploadSuccess": "APM playlists synced to Dropbox!",
    "DropboxUploadFail": "APM playlists failed to sync 2 dropbox",
    "DropboxUploadFailSnackbar": "APM playlists failed to sync to Dropbox!",
    "DropboxDownloadSuccess": "APM playlists synced from dropbox!",
    "DropboxDownloadFail": "APM playlists DNE on dropbox",
    "DropboxDownloadFailSnackbar": "APM playlists failed to sync from dropbox",
    "PersonalCloudUploadSuccess": "歌单上传到PersonalCloud成功！",
    "PersonalCloudUploadFail": "云端歌单不存在",
    "PersonalCloudUploadFailSnackbar": "歌单上传到PersonalCloud失败，错误记录在控制台里",
    "PersonalCloudDownloadSuccess": "歌单同步自PersonalCloud成功！",
    "PersonalCloudDownloadFail": "云端歌单不存在",
    "PersonalCloudDownloadFailSnackbar": "歌单同步到PersonalCloud失败，错误记录在控制台里",
    "personalCloudIPPlaceholder": "end with forward slash /",
    "personalCloudIPLabel": "Private cloud IP address",
    "personalCloudKeyPlaceholder": "",
    "personalCloudKeyLabel": "Private cloud key",
    "fileNotValidJson": "selected backup file is corrupted.",
    "NoxExtensionImportTitle": "noxplayer format detected",
    "NoxExtensionImportMsg": "How do you want to import playlists from noxplayer?",
    "Sync.NoxExtensionOverwrite": "Overwrite",
    "Sync.NoxExtensionAppend": "Append",
    "Sync.NoxExtensionCancel": "Cancel"
  },
  "SleepTimer": {
    "Title": "Sleep Timer"
  },
  "Login": {
    "BilibiliNotLoggedIn": "User not logged in\n",
    "BilibiliLoginButton": "QR log in",
    "BilibiliCookieInputButton": "Manually input cookies",
    "BilibiliCookieInputDialogTitle": "Add Bili Cookies",
    "BilibiliLoginQRGeneration": "Generating QR code...",
    "BilibiliLoginQRGenerated": "Scan QR code in Bilibili app to login",
    "BilibiliLoginQRGenerateFailed": "Bilibili QR code generation failed. Please check network.",
    "BilibiliLoginQRExpired": "Bilibili QR code expired. Regenerate to login.",
    "BilibiliLoginProbeFailed": "Checking QR code login status failed. Please check network.",
    "Disclaimer": "Using bilibili cookies in this app may BAN your account/IP due to API abuse. At the very least use a spare account.",
    "SyncBiliFavlist": "Sync from bilibili favorites",
    "Logout": "LOGOUT"
  },
  "VersionUpdate": {
    "DownloadAPK": "Update",
    "DownloadingAPK": "Downloading the latest APM armv8 APK...",
    "DownloadedAPK": "Update APM",
    "NoUpdates": "Noxplayer is already at the newest version.\nCurrent version:{{currentVersion}}\nDev version: {{devVersion}}",
    "UpdateCheckingSnackbar": "Checking updates...",
    "UpdateCheckingFailedSnackbar": "Checking update via github failed.",
    "UpdateFoundTitle": "New update found!",
    "UpdateFoundContent": "Noxplayer version {{noxCheckedVersion}} is released. Go to gtihub to dowenload.\nCurrent version:{{currentVersion}}\nDev version: {{devVersion}}",
    "UpdatedVersionAlertTitle": "Noxplayer updated!",
    "UpdatedVersionAlertContent": "Noxplayer updated to version {{version}}! Check out the release notes at github.",
    "UpdateGo2Github": "Go to Github"
  },
  "CustomSkin": {
    "SearchFailMsg": "Failed to load custom skin JSON file",
    "SearchBarLabel": "Custom skin JSON web address"
  },
  "About": {
    "Disclaimer1": "This project and its contents are not affiliated with, funded, authorized, endorsed by, or in any way associated with Bilibili Inc. or any of its affiliates and subsidiaries. (But we really want to, call us)",
    "Disclaimer2": "Any trademark, service mark, trade name, or other intellectual property rights used in this project are owned by the respective owners.",
    "About1": "APM is an open source software. You may find the source code of APM at github.com/lovegaoshi/azusa-player-mobile free of charge. Please consider adding your music stream cuts on bilibili via the video series list functionality with keywords to add videos into the series list automatically."
  },
  "AndroidAuto": {
    "PlaylistTab": "Playlists",
    "NowPlayingTab": "Now Playing",
    "GoToNowPlayingTab": "go to now playing",
    "Permission": "Hi! APM is technically limited that only by enabling the \"display over other apps\" permission ensures properly functionalities on Android Auto. For the best experience please press OK and enable it if you intend to use APM with a car.",
    "PlayingShuffle": "No match! Shuffling instead..."
  },
  "PlaylistRegex": {
    "absoluteMatch": "Absolute Match",
    "artistMatch": "Artist",
    "albumMatch": "Album",
    "cachedMatch": "Cached",
    "durationLessMatch": "Duration <",
    "durationMoreMatch": "Duration >"
  },
  "Accessibility": {
    "gif": "GIF"
  },
  "Menu": {
    "local": "Local"
  },
  "Lyric": {
    "loading": "Loading lyric...",
    "failedToFetch": "lrc failed to fetch",
    "notFound": "[00:00.000] Lyric was not found"
  },
  "PlaylistAnalytics": {
    "title": "Playlist Analytics of {{val}}",
    "uniqCount": "Playlist has {{val}} unique songs;",
    "topX": "Most common songs: {{val}}",
    "new": "New songs: {{val}}",
    "avg": "Playlist contains a total of {{val1}} bvids, and {{val2}} songs per bvid on average;",
    "shazamFailed": "shazam failed statistics: {{val1}} ({{val2}}%)"
  }
}
